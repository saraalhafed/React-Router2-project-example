{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saraa\\\\Desktop\\\\React\\\\REACT CLASS_NOT\\\\Router2-project-example\\\\src\\\\routes\\\\PrivateRouters.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate, Outlet, useLocation } from 'react-router-dom';\n/* to understand wher we are */\n\n// location is a hook that returns an object which contains url location as pathname, search as url queries, state to receive incoming information\n\n/* wher was the user what  prev page    */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoutes = ({\n  user\n}) => {\n  _s();\n  const location = useLocation();\n  /* wher he try to raech ,we tell the url wher the user try to go  */ /* my current path */\n  return user ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 17\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: `/login?next=${location.pathname}`\n    // state is to send information to the path component\n    ,\n    state: {\n      from: location.pathname,\n      message: 'user needs authentication'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }, this);\n  //<Navigate to={`/login`} />\n};\n_s(PrivateRoutes, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = PrivateRoutes;\nexport default PrivateRoutes;\n/* if ther is user , the user can see people link and can reach it also in url ,\r\nbut when there is no user the user can not see people link and when the user try  to typ people in url it take him to login page*/\n/* <Navigate to=\"/login\" /> is component is work the same as useNavigate */\nvar _c;\n$RefreshReg$(_c, \"PrivateRoutes\");","map":{"version":3,"names":["React","Navigate","Outlet","useLocation","jsxDEV","_jsxDEV","PrivateRoutes","user","_s","location","fileName","_jsxFileName","lineNumber","columnNumber","to","pathname","state","from","message","_c","$RefreshReg$"],"sources":["C:/Users/saraa/Desktop/React/REACT CLASS_NOT/Router2-project-example/src/routes/PrivateRouters.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Navigate, Outlet, useLocation } from 'react-router-dom';\r\n/* to understand wher we are */\r\n\r\n // location is a hook that returns an object which contains url location as pathname, search as url queries, state to receive incoming information\r\n\r\n /* wher was the user what  prev page    */\r\nconst PrivateRoutes = ({ user }) => {\r\n  const location = useLocation()\r\n                                /* wher he try to raech ,we tell the url wher the user try to go  */                 /* my current path */\r\n  return user ? <Outlet /> :\r\n  <Navigate\r\n  to={`/login?next=${location.pathname}`}\r\n  // state is to send information to the path component\r\n  state={{ from: location.pathname, message: 'user needs authentication' }}\r\n/>\r\n  //<Navigate to={`/login`} />\r\n};\r\n\r\nexport default PrivateRoutes;\r\n/* if ther is user , the user can see people link and can reach it also in url ,\r\nbut when there is no user the user can not see people link and when the user try  to typ people in url it take him to login page*/\r\n/* <Navigate to=\"/login\" /> is component is work the same as useNavigate */"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,MAAM,EAAEC,WAAW,QAAQ,kBAAkB;AAChE;;AAEC;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACD,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EACA,qEAAqF;EACnH,OAAOI,IAAI,gBAAGF,OAAA,CAACH,MAAM;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBACxBR,OAAA,CAACJ,QAAQ;IACTa,EAAE,EAAE,eAAeL,QAAQ,CAACM,QAAQ;IACpC;IAAA;IACAC,KAAK,EAAE;MAAEC,IAAI,EAAER,QAAQ,CAACM,QAAQ;MAAEG,OAAO,EAAE;IAA4B;EAAE;IAAAR,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1E,CAAC;EACA;AACF,CAAC;AAACL,EAAA,CAVIF,aAAa;EAAA,QACAH,WAAW;AAAA;AAAAgB,EAAA,GADxBb,aAAa;AAYnB,eAAeA,aAAa;AAC5B;AACA;AACA;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}